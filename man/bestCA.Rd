% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bestCA.R
\name{bestCA}
\alias{bestCA}
\alias{bestN}
\alias{ckrsCA}
\alias{dwyerCA}
\alias{nistCA}
\alias{tjCA}
\title{Function to obtain the best uniform CA for a combination of t, k and v}
\usage{
bestCA(t, k, v, fixNA=TRUE, seed=NULL, preference=NULL, override=FALSE, ...)

bestN(t, k, v, internet=TRUE, exclude=NULL, ...)

ckrsCA(t, k, v, ...)

dwyerCA(t, k, v, ...)

nistCA(t, k, v, ...)

tjCA(t, k, v, ...)
}
\arguments{
\item{t}{integer: the strength}

\item{k}{integer: the number of columns}

\item{v}{integer: the number of levels for each column}

\item{fixNA}{logical: should flexible values be fixed?\cr
If the ingoing CA has flexible values, \code{fixNA=TRUE}
randomly assigns a fixed value to each flexible value.\cr
Thus, a seed is needed for reproducibility.}

\item{seed}{\code{NULL} or an integer seed for making the
fixing of NA values reproducible; if \code{seed=NULL},
a seed is randomly obtained and stored in the attribute
\code{fixNA_seed} of the returned object.}

\item{preference}{character: the label for the preferred method;
one of "PALEY", "CAEX", "CYCLOTOMY", "CKRS",
"recBoseCA_PCA", "recBoseCA_CA", "projBoseCA", "fuseBose",
"WKS", "CS_MS", "CS_LCDST", "CS_CK", "DWYER", "NIST", "TJ"}

\item{override}{logical: If TRUE, the preference overrides a
better method, otherwise (default) it only decides
between equally-good methods.}

\item{...}{handed to construction function, currently,
only implemented for \code{fuseBose}, for enabling \code{fixNA=FALSE}}

\item{internet}{logical; if FALSE, methods whose designs need an internet
connection are excluded}

\item{exclude}{\code{NULL} or a character vector of method(s) to exclude,
in support of size calculations for recursive constructions
which need to calculate sizes of best ingredients}
}
\value{
\code{bestN} returns a named integer: the first method that yields the
smallest implemented size.\cr
The other functions return a matrix of class \code{ca},
which is a uniform covering array of strength at least \code{t} with
\code{k} columns at \code{v} levels.
}
\description{
The function uses function Ns to find the best currently implemented
CA for the requested scenario.
}
\section{Details}{

Function \code{bestCA} uses function \code{\link{Ns}} for locating
the best construction for the given scenario, and subsequently
implements the first such construction, where the order is that
returned by function \code{\link{Ns}}.

The user can override that order by stating a preferred construction
with the argument \code{preference}. With \code{override=TRUE},
the preference is observed whenever possible, even if this implies
a larger CA than necessary.

Some constructions (\code{"DWYER"} and \code{"NIST"}) require an internet
connection, because the respective CAs are not part of the package.

Some constructions provide CAs with flexible values, which are denoted
as NA values in package \pkg{CAs}. These need to be fixed for actual
experimentation, and function \code{bestCA} fixes them randomly; in such
cases, the returned object has an attribute \code{fixNA_seed}, which is
either the seed that was specified by the user or a seed that was created
by the function. Specifying the seed in a subsequent call to the function
permits to get the same CA again (provided that no new smaller CAs have
been implemented).

The attributes of the returned object contain elements \code{eCAN},
\code{CAs-version} and \code{date}: \code{eCAN} gives the current
best array; as this may change, the other attributes provide the
context.
}

\examples{
# example with a single best construction
Ns(2,12,4)
bestCA(2,12,4)
# example with three best constructions
Ns(4,8,2)
# without a preference, bestCA uses the leftmost
bestCA(4,8,2)
bestCA(4,8,2, preference="PALEY")

Ns(3, 1500, 2)
## powerCT is best
attributes(bestCA(3, 1500, 2))
## it is, of course, also possible to directly use the
## construction functions, in this case powerCA with type="CT".

# a case that is not implemented (would be huge)
Ns(6, 5000, 10)
try(bestCA(6, 5000, 10))

Ns(3, 50, 2)
## DWYER needs internet connection,
## as earlier in list, TJ is preferred
D <- bestCA(3, 50, 2)
dim(D)
# coverage(D, 3)

Ns(6, 50, 2)
## WKS is the only best
D <- bestCA(6, 50, 2)
dim(D)

Ns(3,9,7)
## CKRS and DWYER are best
D <- bestCA(3, 9, 7)
dim(D)

Ns(3,9,6)
## CKRS is best implemented, but 18 runs worse than eCAN
eCAN(3,9,6)
## Torres-Jimenez designs are currently (Sep 2025) unavailable
D <- bestCA(3, 9, 6)
attributes(D)

Ns(3,9,5)
## CK_NRB is the unique best
ks(3,185,5)

Ns(2,26,24) ## fuseBose is best-known
dim(bestCA(2,26,24))

Ns(2,26,23) ## fuseBushtCA is best implemented,
            ## projBoseCA is close
dim(D <- bestCA(2,26,23))
attributes(D)
## eCAN from NCK post processing of projBose
## (removes 7 runs)
eCAN(2,26,23)

Ns(3,6,12)
## the optimum Ji and Yin OA is in the package as oa1728.12.6

}
\seealso{
\code{\link[=Ns]{Ns()}}
}
