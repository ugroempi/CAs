% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/powerCA.R
\name{powerCA}
\alias{powerCA}
\alias{N_powerCT}
\alias{k_powerCT}
\title{Power constructions}
\usage{
powerCA(t, k, v, type="CT", ...)

N_powerCT(t, k, v, type="CT", ...)

k_powerCT(t, N, v, type="CT", ...)
}
\arguments{
\item{t}{integer, strength of the CA}

\item{k}{integer, number of columns of the CA}

\item{v}{integer, number of levels of the CA}

\item{type}{character string, currently only \code{CT} is implemented}

\item{...}{currently not used}

\item{N}{integer, number of runs of the CA}
}
\value{
Function \code{powerCA}
returns a strength \code{t} CA in \code{N_powerCA(t, k, v)} runs
and \code{k} columns. \code{k_powerCA(t, N, v)} returns the maximum number of columns
that can be achieved with \code{N} runs when requesting strength \code{t} at \code{v} levels.
}
\description{
Functions to construct a strength t CA in with k columns at v levels
based on the power construction by Colbourn and Torres-Jimenez (2010)
}
\section{Details}{

The function \code{powerCA} implements constructions according to
Colbourn and Torres-Jimenez (2010); it is based on the data.frame object
\code{\link{powerCTcat}} that contains scenarii for which the power construction
with ideal ingredients yields the smallest possible CAs according to
\code{\link{colbournBigFrame}} (and for which the construction string in
\code{\link{colbournBigFrame}} is understood). Many rows of the data.frame
object \code{\link{powerCTcat}} refer to instances for which the resulting
design is so large that its construction requires a computer with massive
resources (and the naive call of \code{powerCA} will crash R or even the
computer); it is therefore recommended to inspect the expected run size
with function \code{N_powerCT} before calling the construction function.

The actual arrays that can be generated with this package may be larger than
the best possible ones if the perfect ingredients are not (yet) available;
they may also be somewhat smaller, because this package makes use of the
maximum number of constant rows of the ingredient CAs where possible, whereas
the numbers in \code{\link{colbournBigFrame}} do not always do that
(it appears that they do it where
the Source entry contains "c" next to the respective ingredient).

The construction uses functions \code{\link{Tred}}, \code{\link{createDHF}}, and
\code{\link{DHHF2CA}}, as well as CA construction functions as indicated in
\code{\link{powerCTcat}}.
}

\examples{
Ns(3, 25, 2)  ## not a good case, but small enough for checking coverage
D <- powerCA(3, 25, 2)
dim(D)
coverage(D, 3)
Ns(3, 25, 2) ## too large for so few columns

## a larger example
Ns(6, 25, 2) ## way too large for so few columns
ks(6, 5321, 2) ## would cover many more columns
dim(powerCA(6,5000,2))
Ns(6, 5000, 2) ## eCAN is PowerCZ

}
\references{
Colbourn and Torres-Jimenez (2010)
}
