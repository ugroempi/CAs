% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CAN.R
\name{Ns}
\alias{Ns}
\alias{eCAN}
\alias{N_NISTcat}
\alias{N_TJcat}
\alias{N_WKScat}
\alias{N_CKRScat}
\alias{N_DWYERcat}
\alias{N_PALEYcat}
\alias{N_CYCLOTOMYcat}
\alias{N_CAEX}
\alias{ks}
\alias{eCAK}
\alias{k_NISTcat}
\alias{k_TJcat}
\alias{k_WKScat}
\alias{k_CKRScat}
\alias{k_DWYERcat}
\alias{k_PALEYcat}
\alias{k_CYCLOTOMYcat}
\alias{k_CAEX}
\title{Functions for N and k from Colbourn tables, other libraries, and implemented constructions}
\usage{
Ns(t, k, v)

eCAN(t, k, v)

N_NISTcat(t, k, v)

N_TJcat(t, k, v)

N_WKScat(t=6, k, v=2)

N_CKRScat(t, k, v)

N_DWYERcat(t, k, v)

N_PALEYcat(t, k, v=2)

N_CYCLOTOMYcat(t, k, v)

N_CAEX(t=2, k, v=3)

ks(t, N, v)

eCAK(t, N, v)

k_NISTcat(t, N, v)

k_TJcat(t, N, v)

k_WKScat(t=6, N, v=2)

k_CKRScat(t, N, v)

k_DWYERcat(t, N, v)

k_PALEYcat(t, N, v=2)

k_CYCLOTOMYcat(t, N, v)

k_CAEX(t=2, N, v=3)
}
\arguments{
\item{t}{coverage strength}

\item{k}{number of columns}

\item{v}{number of levels for each column}

\item{N}{number of runs}
}
\value{
\code{eCAN} returns a data frame with the smallest known run size
(empirical CAN, based on the Colbourn table)
and the corresponding source entry (Source),\cr
\code{eCAK} does the same with the largest possible number of columns \code{k},\cr
\code{N_NISTcat} returns the smallest run size for the requested \code{k} of a
catalogued array from the publicly available NIST covering array library,\cr
\code{k_NISTcat} returns the maximum column size for the requested \code{N} of a
catalogued array from the publicly available NIST covering array library,\cr
and \code{N_TJcat} returns the smallest run size for the requested \code{k} of a
catalogued array from the Jose Torres-Jimenez library (as of Feb 6 2025, small
selection, which is expected to grow; partly available in this package),\cr
and \code{k_TJcat} returns the largest number of columns \code{k} for the requested \code{N}
of a catalogued array from the Jose Torres-Jimenez library (as of Feb 6 2025, small
selection, which is expected to grow; partly available in this package)\cr
The analogous functionality holds for \code{N_} and \code{k_} functions for
\code{DWYERcat}, \code{CKRScat} and \code{WKScat}.
.
In cases for which there is no entry in the respective
table or library, the returned results are missing values.
}
\description{
The functions extract the number of runs needed for a specified setting
according to the Colbourn tables, according to the NIST library of CAs
and the Torres-Jimenez library of CAs, as well as according to implemented constructions
and available catalogues. Or they extract the number of columns
achievable for a specified number of runs.
}
\details{
Functions \code{Ns} and \code{ks} take into account all available
catalogues and constructions, for which sizes can be easily provided; their
scope will grow with time. Specific functions for run sizes \code{N} and
numbers of columns \code{k} can also be inspected separately.
The functions typically look for a value of \code{k} for \emph{at most}
\code{N} runs, but a value of \code{N} for exactly \code{k} columns.
Most functions look for
exact strength \code{t}, except for those for \code{WKScat}, which also return a
value for at most strength \code{t}, with a message.

At present, the individual functions,
except for \code{eCAN} and \code{eCAK}, return a number only.
This may change in the future.

For the \code{TJcat}-related functions, a message provides the command for
creating the CA, if a creation from within the package is possible (with one of
functions \code{CAEX} or \code{SCA_Bose}).
}
\examples{
eCAN(3, 199, 2)
N_NISTcat(3, 199, 2)
N_TJcat(3, 199, 2) ## equals the best-known array

eCAN(4, 199, 2)
N_TJcat(4, 199, 2) ## Colbourn table outdated

eCAK(2,11,3)  ## also obtained by CAEX
k_NISTcat(2,11,3)
k_TJcat(2,11,3) ## equals the best-known array

N_CYCLOTOMYcat(3, 45, 3) ## t=3 and v=3 not implemented
N_CYCLOTOMYcat(4, 45, 3) ## quite large!
k_CYCLOTOMYcat(4, 669, 3) ## can accommodate 224 columns
N_CYCLOTOMYcat(4, 5, 3) ## is the smallest *implemented*
                        ## cyclotomy strength 4 CA for 3 levels
N_CYCLOTOMYcat(4, 670, 3) ## the next smallest is for 1051 columns
eCAN(4, 670, 3)           ## which is a current optimum

# overview of available constructions
Ns(2, 45, 2)  ## function KSK is known to yield the overall optimum
Ns(3, 45, 2)  ## the best array is in the DWYER-catalogue
   # https://github.com/aadwyer/CA_Database/blob/main/Repository/CA/CA_26_3_46_2.txt
Ns(3, 400, 2) ## at present, the best easily available array
              ## is in the NIST catalogue
   # https://math.nist.gov/coveringarrays/ipof/cas/t=3/v=2/ca.3.2\%5E400.txt.zip
Ns(2, 800, 3) ## function CAEX produces the best available array
Ns(3, 200, 3) ## the respective construction has not yet been implemented
   # ## at present, the best easily available array
              ## is in the NIST catalogue
   # https://math.nist.gov/coveringarrays/ipof/cas/t=3/v=3/ca.3.3\%5E200.txt.zip
Ns(4, 150, 3) ## cyclotomy is very competitive
Ns(4, 150, 2) ## the best easily available CA is NIST, PALEY is not much worse
Ns(4, 50, 2) ## Paley and Cyclotomy are the same, and both optimal
Ns(4, 50, 3) ## the best easily available CA is
   # https://github.com/aadwyer/CA_Database/blob/main/Repository/CA/CA_507_4_53_3.txt
Ns(5, 50, 2) ## Paley is optimal
Ns(5, 500, 2) ## at present, Cyclotomy is competitive - best design will be implemented
Ns(5, 50, 3) ## the best easily available CA is
   # https://github.com/aadwyer/CA_Database/blob/main/Repository/CA/CA_2067_5_50_3.txt
Ns(5, 500, 3) ## Cyclotomy is optimal
Ns(6, 50, 2) ## WKS is optimal
   # WKS_CAs['50']
Ns(6, 200, 2) ## Paley is optimal
Ns(6, 2000, 2) ## Cyclotomy is optimal
Ns(6, 200, 3) ## not easily available at present

}
