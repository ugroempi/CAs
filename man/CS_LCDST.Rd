% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CS_LCDST.R
\name{CS_LCDST}
\alias{CS_LCDST}
\alias{N_CS_LCDST}
\alias{k_CS_LCDST}
\title{Strength 2 CAs constructed by cover starters (LCDST)}
\usage{
CS_LCDST(k, v, start0=TRUE, starter=NULL, ...)

N_CS_LCDST(k, v)

k_CS_LCDST(N, v)
}
\arguments{
\item{k}{number of factors}

\item{v}{number of levels, \code{v} >= 3}

\item{start0}{should the output design's levels start with zero (default) or 1?}

\item{starter}{an optional cover starter vector that starts with a fixed value, denoted by a number larger than 100.\cr
This may be useful for cases with k larger than implemented in the stored cover starters.\cr
CAUTION: Responsibility for achieving the coverage rests with the user, please check!}

\item{...}{currently not used}

\item{N}{affordable number of runs}
}
\value{
\code{CS_LCDST} returns the smallest possible strength 2 CA from the Lobb et al. (2012) construction for \code{k} experimental factors in \code{v} levels; it is an \code{N x k} matrix with entries from 0 to \code{v-1} or from 1 to \code{v}, depending on \code{start0}.\cr
\code{N_CS_LCDST} returns the minimum run size needed for the LCDST construction with \code{k} factors at \code{v} levels, or \code{NA}, if no such construction exists.\cr
\code{k_CS_LCDST} returns the maximum number of \code{v}-level factors that can be accommodated in at most \code{N} runs, or \code{NA}, if no such construction exists.
}
\description{
Function to construct a strength 2 CA based on cover starters according to Lobb et al. 2012.
k and v must be specified, the number of runs is ((v-f)*k+CAN_(2,k,f),
where f is the number of fixed points (assuming that the CAN array is available,
which is the case for f=1,2,3 (eCAN in case of f=3))
}
\section{Details}{

Lobb et al. (2012) denote designs with the factors as the columns and the runs as the rows, like in this package, and contrary to Meagher and Stevens (2005).

The construction uses starter vectors of \code{k} elements with first element a fixed position, denoted as a number >100, depending on \code{v}: the fixed points are taken as the last f levels, and they will be made valid levels \code{v-1} to \code{v-f} eventually by subtracting 100.

The starter vector is cycled into a \code{k x k} matrix \code{M} (internal function \code{circular}),
which is one key ingredient of the construction. The other key ingredient is the additive group \code{Z} of
\code{v-f} elements, which is repeatedly applied to the non-fixed elements.
The resulting matrix consists in vertical concatenations of those \code{v-f} matrices,
augmented by the smallest possible CA for \code{k} f-level columns in order to cover
interactions among the fixed levels (a constant row with the only fixed level in case of f=1).

Functions \code{N_CS_LCDST} and \code{k_CS_LCDST} return the minimum \code{N} or the maximum
\code{k} for the requested scenario. In case of \code{N_CS_LCDST}, the default to use the
available starters can be overridden by the argument \code{theoretical}, which allows
to inspect how many runs can be obtained by a suitable user-specified starter vector
with the perfect additional ingredient.
}

\examples{
## example for k=5, v=3, f=1
starter <- c(102, 0, 1, 1, 0)
coverage(CS_LCDST(5, 3, starter=starter), 2)

## example for k=20, v=8, f=3
## levels 0 to 7, with levels 5 to 7 fixed
## array used by function CS_LCSDT for interactions among fixed points
addfix <- CAEX(20)  ##  20 3-level columns at strength 2
coverage(addfix,2)
dim(addfix)         ## 15 rows
CA115.2.20.8 <- CS_LCDST(20, 8) ## 115 runs, 20 columns
dim(CA115.2.20.8)   ## (v-f)*k + nrow(addfix) = (8 - 3)*20 + 15 rows
coverage(CA115.2.20.8,2)

N_CS_LCDST(20, 8)  ## 115 runs are needed for 20 8-level columns
k_CS_LCDST(120, 8) ## with up to 120 runs, 20 8-level columns are possible
eCAN(2, 20, 8) ## post-processing with simulated annealing may loose seven rows

}
\references{
Lobb et al. (2012)
}
