% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/payley.R
\name{conference_paley}
\alias{conference_paley}
\alias{paley}
\alias{show_paley}
\title{Paley constructions}
\usage{
paley(q)

conference_paley(q)

show_paley(minN=NULL, maxN=NULL)
}
\arguments{
\item{q}{prime or prime power}

\item{minN, maxN}{bounds for the run size N. Without specified bounds,
the returned data frame has more than 1000 rows.}
}
\value{
Function \code{conference_paley} returns a conference matrix,
function \code{paley} a strength 3 CA (matrix) in \code{q} or \code{2q+1} 2-level columns
(see Section Details). Function \code{show_paley} returns a data frame
with columns N, k, q, constr, CAN, Source (source entry in the Colbourn tables
for the design with fewest possible runs), and N_NISTcat for q up to 10009.
Most of the arrays listed can be created;
exceptions are q that are powers of primes larger than 50.
}
\description{
Function to construct CAs in 2-level columns with
number of runs a multiple of 4,
number of columns one less than runs,
and coverage strength 3. The arrays are also OAs of strength 2.
Also function for creating a conference matrix,
and overview function for
}
\section{Details}{

Based on finite fields and conference matrices,
the Paley construction yields arrays in numbers
of levels a multiple of 4. Constructions depend on
the value of \code{q \%\% 4}, which can either be 1 or 3:\cr
For \code{q \%\% 4 = 3}, a (q+1) x q CA is obtained,\cr
\code{q \%\% 4 = 1} yields a (2q+2) x (2q+1) CA.\cr
It may be of interest that the arrays are also orthogonal
arrays of strength 2.

\code{show_paley} shows the run sizes that can be obtained
with the constructions, and the corresponding values of k and q, as well as
the smallest number for a strength 3 array in the same number of
2-level columns according to the Colbourn tables
(currently-known upper bound for CAN) with the corresponding source entry,
and the run size of the NIST catalogued array.
}

\examples{
# paley construction I for N=12
D12I <- paley(11)
# paley construction II for N=12
D12II <- paley(5)
# they are not the same
table(D12I - D12II)
# but they have the some coverage properties
unlist(coverage(D12I, 3))
unlist(coverage(D12I, 4))
unlist(coverage(D12II, 3))
unlist(coverage(D12II, 4))

show_paley(maxN=36)
show_paley(minN=100, maxN=150)

}
