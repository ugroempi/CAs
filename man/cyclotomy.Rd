% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Cyclotomy.R
\name{cyclotomyCA}
\alias{cyclotomyCA}
\alias{cyc}
\alias{N_cyc}
\alias{k_cyc}
\title{functions for cyclotomy constructions}
\usage{
cyclotomyCA(t, k, v, ...)

cyc(q, v, k=NULL, type=NULL, primitive=NULL)

N_cyc(q, v, type)

k_cyc(q, v, type)
}
\arguments{
\item{t}{requested strength (coverage)}

\item{k}{requested number of columns; for \code{cyc}, default \code{NULL} for maximum possible}

\item{v}{number of levels for each column}

\item{...}{currently not used}

\item{q}{prime or prime power with q=1(mod v)}

\item{type}{the construction type ("1","2","3","3a","3b","4a", or "4b"),
default implies "1"}

\item{primitive}{the primitive of the finite field to be used for the construction
(specification should not be needed, except for cases that are not adequately covered
by the internal data.frame \code{primedat})}
}
\value{
\code{cyclotomyCA} returns a matrix with \code{k} columns and values 0 to \code{v-1} in the
number of rows that can be obtained by the cyclotomy construction for strength \code{t};\cr
the matrix has class \code{ca}.\cr

\code{cyc} returns a matrix with \code{k} columns and values 0 to \code{v-1} with the
number of runs corresponding to the construction (see Details section).
\code{k_cyc} and \code{N_cyc} return the maximum possible k and the run size N for the given parameters.
}
\description{
cyc provides cyclotomy constructions according to Colbourn (2010), which yield
good high strength arrays for v=2,3,4,6 (see Details section); Ncyc and kcyc
provide run sizes and maximum numbers of columns for the respective q, v and
construction type.
}
\section{Details}{

Function \code{cyclotomyCA} allows to specify \code{t}, \code{k} and \code{v} and to
obtain the smallest \emph{implemented} CA from the cyclotomy construction
for this specification (if one exists); note that it is very well possible that there is
a smaller CA for the purpose from a cyclotomy construction. This package only automatically
implements those CAs that have optimum size as of the state of the Colbourn tables of best bounds
of November 2024; this is because various mistakes were found in tables of Colbourn (2010),
and the package author does not want to take responsibility for the strength of CAs according to
those tables from the paper. Users who know that a certain prime power \code{q}
yields a smaller CA for their requirements can use function \code{cyc} for creating that CA.\cr
The implemented constructions include three strength 5 cases attributed to
Torres-Jimenez, for which \code{q\%\%v==2} (and not 1, as required in Colbourn 2010).
Limited checks by sampling suggest that these are OK, but no full checks have been conducted,
and the implementation trusts that the Colbourn tables are correct (except in one case, which was
omitted because the alleged \code{q} is not a prime or prime power (13*229)).

The function \code{cyc} is meant for experts and yields designs with columns in \code{v} levels based on
prime or prime power \code{q} as follows:

for N=k=q=1(mod v) prime power (Construction 4.1)\cr
or N=q+v-1, k=q, with q=1(mod v) prime power (Construction 4.2)\cr
(add constant rows with elements 1, 2, ..., v-1\cr
to construction 4.1, as these are missing)\cr
or N=vq, k=q, with q=1(mod v) prime power (Construction 4.3)\cr
(juxtapose vertically A, A+1, ..., A+v-1 (mod v);\cr
this is called developing modulo v)\cr
or 4.3a: k=q+1\cr
(extend A by column of 0s before developing)\cr
or 4.3b: N=vq+v^2-v, k=q+1\cr
(add non-zero constant rows (like in 4.2),\cr
then add column of 0s before developing)\cr
or N=vq+v, k=q, with q=1(mod v) prime power (Construction 4.4)\cr
add constant row of zeroes to A before developing\cr
or 4.4a: k=q+1\cr
also add constant column of zeroes\cr
or 4.4b: N=vq+v^2-v, k=q+1 (same as 3.b)\cr
add to A all nonzero constant rows\cr
and a column of ones, then develop

The parameters have to be specified by the user. They can, e.g.,
be selected from cyclotomy construction entries of \code{CAs:::colbournBigFrame},
or from the Colbourn (2010) paper.
}

\section{Warning}{
 For valid parameters, function \code{cyc} always returns an array,
but coverage properties are only guaranteed for well-chosen parameters!
}

\examples{
## construction 1
## 2-level
CA19.3.19.2 <- cyc(19, 2) ## q=19, k=19
coverage(CA19.3.19.2, 3)
coverage(CA19.3.19.2, 4)

# 3-level
CA93.3.32.3 <- cyc(31, 3, type="3a")
coverage(CA93.3.32.3, 3)
dim(CA93.3.32.3)
k_cyc(31,3,"3a")
N_cyc(31,3,"3a")

## reduce k versus the default 32
CA93.3.23.3 <- cyc(31, 3, k=23, type="3a")
dim(CA93.3.23.3)
}
